name: Java CI
on: push
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
jobs:
  clonedown:
    name: Clone-down
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - uses: actions/checkout@v2
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .
  test:
    name: Test
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Test
        run: chmod +x ci/unit-test-app.sh && ./ci/unit-test-app.sh
    needs: clonedown
  build:
    name: Build
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Build-set
        run: chmod +x ci/build-app.sh && ./ci/build-app.sh
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-code
          path: .
    needs: clonedown
  build-and-push-latest:
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: release-code
          path: .
      - name: Build image
        run: chmod +x ci/build-docker.sh && ./ci/build-docker.sh && export GIT_COMMIT="GA-$GITHUB_SHA"
      - name: Push image
        run: chmod +x ci/push-docker.sh && ./ci/push-docker.sh && export GIT_COMMIT="GA-$GITHUB_SHA"
  componenttest:
    runs-on: ubuntu-latest
    needs: build-and-push-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: release-code
          path: .
      - name: Component test
        run: chmod +x ci/component-test.sh && export GIT_COMMIT="GA-$GITHUB_SHA" && ./ci/component-test.sh